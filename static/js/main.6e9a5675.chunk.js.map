{"version":3,"sources":["components/PortfolioItem/PortfolioItem.scss","components/PortfolioContent/PortfolioContent.scss","components/Header/Header.scss","App.scss","components/PortfolioContent/img/switzerland.jpg","components/PortfolioContent/img/aqua.jpg","components/PortfolioContent/img/kanban.png","components/Header/Header.js","pages/Home/Home.js","pages/About/About.js","components/PortfolioItem/PortfolioItem.js","components/PortfolioContent/PortfolioContent.js","pages/Portfolio/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","handleToggleBurgerMenu","setState","burgerMenu","state","this","burgerButton","styles","header_button","nav","active","className","header_nav","header_list","header_item","header_link","onClick","to","header","type","button_top","button_mid","button_bot","Component","Home","About","PortfolioItem","href","target","block","block_img_box","block_img","src","projectAvatar","alt","avatarAlt","block_title","projectName","block_info","projectInfo","PortfolioContent","projects","id","name","imgSrc","require","info","projectsArray","map","item","push","key","block_wrapper","Portfolio","Fragment","customHistory","createBrowserHistory","App","history","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,UAAY,mCAAmC,YAAc,qCAAqC,cAAgB,uCAAuC,UAAY,qC,mBCA9ND,EAAOC,QAAU,CAAC,MAAQ,kCAAkC,cAAgB,4C,kBCA5ED,EAAOC,QAAU,CAAC,OAAS,yBAAyB,WAAa,6BAA6B,cAAgB,gCAAgC,OAAS,yBAAyB,WAAa,6BAA6B,WAAa,6BAA6B,WAAa,6BAA6B,YAAc,8BAA8B,YAAc,8BAA8B,YAAc,gC,mBCApZD,EAAOC,QAAU,CAAC,IAAM,qB,4ECDxBD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,wKCItBC,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAOVC,uBAAyB,WACrB,EAAKC,SAAS,CACVC,YAAa,EAAKC,MAAMD,cAP5B,EAAKC,MAAQ,CACTD,YAAY,GAJD,E,sEAcT,IAECA,EAAcE,KAAKD,MAAnBD,WACHG,EAAeC,IAAOC,cACtBC,EAAM,KAmBV,OAjBIN,IACAG,GAAY,WAAQC,IAAOG,QAC3BD,EAAM,yBAAKE,UAAWJ,IAAOK,YACzB,wBAAID,UAAWJ,IAAOM,aAClB,wBAAIF,UAAWJ,IAAOO,aAClB,kBAAC,IAAD,CAAMH,UAAWJ,IAAOQ,YAAaC,QAASX,KAAKJ,uBAAwBgB,GAAI,KAA/E,SAEJ,wBAAIN,UAAWJ,IAAOO,aAClB,kBAAC,IAAD,CAAMH,UAAWJ,IAAOQ,YAAaC,QAASX,KAAKJ,uBAAwBgB,GAAI,UAA/E,UAEJ,wBAAIN,UAAWJ,IAAOO,aAClB,kBAAC,IAAD,CAAMH,UAAWJ,IAAOQ,YAAaC,QAASX,KAAKJ,uBAAwBgB,GAAI,cAA/E,iBAOZ,4BAAQN,UAAWJ,IAAOW,QACtB,4BAAQF,QAASX,KAAKJ,uBAAwBU,UAAWL,EAAca,KAAM,UACzE,0BAAMR,UAAWJ,IAAOa,aACxB,0BAAMT,UAAWJ,IAAOc,aACxB,0BAAMV,UAAWJ,IAAOe,cAE3Bb,O,GA7CmBc,aCFfC,E,iLAEb,OACI,sC,GAHsBD,aCAbE,E,iLAEb,OACI,0C,GAHuBF,a,kCCCdG,E,iLAEb,OACI,uBAAGC,KAAMtB,KAAKL,MAAM2B,KAAMC,OAAQ,SAAUjB,UAAWJ,IAAOsB,OAC1D,yBAAKlB,UAAWJ,IAAOuB,eACnB,yBAAKnB,UAAWJ,IAAOwB,UAAWC,IAAK3B,KAAKL,MAAMiC,cAAeC,IAAK7B,KAAKL,MAAMmC,aAGrF,wBAAIxB,UAAWJ,IAAO6B,aAAc/B,KAAKL,MAAMqC,aAC/C,uBAAG1B,UAAWJ,IAAO+B,YAAajC,KAAKL,MAAMuC,kB,GATlBhB,aCCtBiB,E,YACjB,WAAYxC,GAAQ,IAAD,8BACf,4CAAMA,KAEDI,MAAQ,CACTqC,SAAU,CACN,CACIC,GAAI,EACJC,KAAM,2GACNhB,KAAM,gCACNiB,OAAQC,EAAQ,IAChBC,KAAM,8MAEV,CACIJ,GAAI,EACJC,KAAM,+DACNhB,KAAM,6BACNiB,OAAQC,EAAQ,IAChBC,KAAM,8MAEV,CACIJ,GAAI,EACJC,KAAM,sEACNhB,KAAM,4CACNiB,OAAQC,EAAQ,IAChBC,KAAM,6RAxBH,E,sEA8BT,IACCL,EAAYpC,KAAKD,MAAjBqC,SACDM,EAAgB,GAetB,OAbAN,EAASO,KAAI,SAACC,GACV,OAAOF,EAAcG,KACjB,kBAAC,EAAD,CACIC,IAAKF,EAAKP,GACVf,KAAMsB,EAAKtB,KACXU,YAAaY,EAAKN,KAClBV,cAAegB,EAAKL,OACpBT,UAAWc,EAAKN,KAChBJ,YAAaU,EAAKH,WAM1B,yBAAKnC,UAAWJ,IAAOsB,OACnB,yBAAKlB,UAAWJ,IAAO6C,eAClBL,Q,GAnDyBxB,aCDzB8B,E,iLAEb,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,EAAD,W,GAJuB/B,a,OCWjCgC,EAAgBC,cAsBPC,MAjBf,WACE,OACI,kBAAC,IAAD,CAAQC,QAASH,GACf,yBAAK5C,UAAWJ,IAAOkD,KACnB,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAM,IAAKC,UAAWrC,IACnC,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAM,SAAUC,UAAWpC,IACxC,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAM,aAAcC,UAAWR,QChBxCS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6e9a5675.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PortfolioItem__block___3HxwB\",\"block_img\":\"PortfolioItem__block_img___3xedf\",\"block_title\":\"PortfolioItem__block_title___zlQzh\",\"block_img_box\":\"PortfolioItem__block_img_box___35oSw\",\"clickThis\":\"PortfolioItem__clickThis___1mXT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PortfolioContent__block___1hitG\",\"block_wrapper\":\"PortfolioContent__block_wrapper___1l2Rn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header__header___3bMN6\",\"header_nav\":\"Header__header_nav___1r_lG\",\"header_button\":\"Header__header_button___bTi_U\",\"active\":\"Header__active___1Z5Aq\",\"button_top\":\"Header__button_top___3fkCv\",\"button_mid\":\"Header__button_mid___169L2\",\"button_bot\":\"Header__button_bot___30fG2\",\"header_list\":\"Header__header_list___37DdA\",\"header_item\":\"Header__header_item___2bNeJ\",\"header_link\":\"Header__header_link___2CO_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App___wmyqV\"};","module.exports = __webpack_public_path__ + \"static/media/switzerland.d5e9a1df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aqua.bdafa195.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kanban.9f2f78fd.png\";","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './Header.scss';\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            burgerMenu: false\r\n        }\r\n    }\r\n\r\n    handleToggleBurgerMenu = () => {\r\n        this.setState({\r\n            burgerMenu: !this.state.burgerMenu\r\n        })\r\n    };\r\n\r\n    render() {\r\n\r\n        const {burgerMenu} = this.state;\r\n        let burgerButton = styles.header_button;\r\n        let nav = null;\r\n\r\n        if (burgerMenu) {\r\n            burgerButton += ` ${styles.active}`;\r\n            nav = <nav className={styles.header_nav}>\r\n                <ul className={styles.header_list}>\r\n                    <li className={styles.header_item}>\r\n                        <Link className={styles.header_link} onClick={this.handleToggleBurgerMenu} to={'/'}>Home</Link>\r\n                    </li>\r\n                    <li className={styles.header_item}>\r\n                        <Link className={styles.header_link} onClick={this.handleToggleBurgerMenu} to={'/about'}>About</Link>\r\n                    </li>\r\n                    <li className={styles.header_item}>\r\n                        <Link className={styles.header_link} onClick={this.handleToggleBurgerMenu} to={'/portfolio'}>Portfolio</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>;\r\n        }\r\n\r\n        return(\r\n            <header className={styles.header}>\r\n                <button onClick={this.handleToggleBurgerMenu} className={burgerButton} type={'button'}>\r\n                    <span className={styles.button_top}></span>\r\n                    <span className={styles.button_mid}></span>\r\n                    <span className={styles.button_bot}></span>\r\n                </button>\r\n                {nav}\r\n            </header>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return(\r\n            <section></section>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return(\r\n            <div>About</div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport styles from './PortfolioItem.scss';\r\n\r\nexport default class PortfolioItem extends Component {\r\n    render() {\r\n        return(\r\n            <a href={this.props.href} target={'_blank'} className={styles.block}>\r\n                <div className={styles.block_img_box}>\r\n                    <img className={styles.block_img} src={this.props.projectAvatar} alt={this.props.avatarAlt}/>\r\n                </div>\r\n\r\n                <h2 className={styles.block_title}>{this.props.projectName}</h2>\r\n                <p className={styles.block_info}>{this.props.projectInfo}</p>\r\n            </a>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport styles from './PortfolioContent.scss';\r\nimport PortfolioItem from '../PortfolioItem/PortfolioItem';\r\n\r\nexport default class PortfolioContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            projects: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Мне нужна Швейцария',\r\n                    href: 'http://switzerland.inbase.me/',\r\n                    imgSrc: require('./img/switzerland.jpg'),\r\n                    info: 'Разрабатывал сайт по готовому дизайну'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'АкваПомощь',\r\n                    href: 'https://www.aquapomosh.ru/',\r\n                    imgSrc: require('./img/aqua.jpg'),\r\n                    info: 'Разрабатывал сайт по готовому дизайну'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Канбан-доска',\r\n                    href: 'https://likeavenus.github.io/canban-test/',\r\n                    imgSrc: require('./img/kanban.png'),\r\n                    info: 'Разработал свою канбан доску, на чистом JavaScript, без бэкенда.'\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {projects} = this.state;\r\n        const projectsArray = [];\r\n\r\n        projects.map((item)=> {\r\n            return projectsArray.push(\r\n                <PortfolioItem\r\n                    key={item.id}\r\n                    href={item.href}\r\n                    projectName={item.name}\r\n                    projectAvatar={item.imgSrc}\r\n                    avatarAlt={item.name}\r\n                    projectInfo={item.info}\r\n                />\r\n            )\r\n        });\r\n\r\n        return(\r\n            <div className={styles.block}>\r\n                <div className={styles.block_wrapper}>\r\n                    {projectsArray}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PortfolioContent from '../../components/PortfolioContent/PortfolioContent';\r\n\r\nexport default class Portfolio extends Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <PortfolioContent/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport {\n    Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport styles from './App.scss';\n\nimport Header from './components/Header/Header';\nimport Home from \"./pages/Home/Home\";\nimport About from \"./pages/About/About\";\nimport Portfolio from \"./pages/Portfolio/Portfolio\";\nimport { createBrowserHistory } from \"history\";\nconst customHistory = createBrowserHistory();\n\n\n\n\nfunction App() {\n  return (\n      <Router history={customHistory}>\n        <div className={styles.App}>\n            <Header/>\n\n            <Switch>\n                <Route exact path={'/'} component={Home}/>\n                <Route exact path={'/about'} component={About}/>\n                <Route exact path={'/portfolio'} component={Portfolio}/>\n            </Switch>\n\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}